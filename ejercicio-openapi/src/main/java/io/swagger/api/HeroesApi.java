/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.18).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Hero;
import io.swagger.model.HeroArray;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2021-02-26T09:08:19.225Z")

@Api(value = "heroes", description = "the heroes API")
@RequestMapping(value = "/api/v1")
public interface HeroesApi {

    @ApiOperation(value = "Add a new heroe to the list", nickname = "addHero", notes = "", response = Hero.class, tags={ "heroes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "successful operation", response = Hero.class),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/heroes",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Hero> addHero(@ApiParam(value = "heroe object that needs to be added to the list" ,required=true )  @Valid @RequestBody Hero body);


    @ApiOperation(value = "Deletes a hero", nickname = "deleteHero", notes = "", tags={ "heroes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation"),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "heroe not found") })
    @RequestMapping(value = "/heroes",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteHero();


    @ApiOperation(value = "Find heroes", nickname = "getHero", notes = "Returns hero list", response = HeroArray.class, tags={ "heroes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = HeroArray.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "heroe not found") })
    @RequestMapping(value = "/heroes",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<HeroArray> getHero();

}
